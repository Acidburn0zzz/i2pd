CXX = clang++
CXXFLAGS ?= ${CXX_DEBUG} -Wall -Wextra -Wno-unused-parameter -pedantic
## NOTE: NEEDED_CXXFLAGS is here so that custom CXXFLAGS can be specified at build time
## **without** overwriting the CXXFLAGS which we need in order to build.
## For example, when adding 'hardening flags' to the build
## (e.g. -fstack-protector-strong -Wformat -Werror=format-security), we do not want to remove
## -std=c++11. If you want to remove this variable please do so in a way that allows setting
## custom FLAGS to work at build-time.
NEEDED_CXXFLAGS = -std=c++11 -D_GLIBCXX_USE_NANOSLEEP=1
INCFLAGS = -I/usr/include/ -I/usr/local/include/
LDFLAGS = ${LD_DEBUG} -Wl,-rpath,/usr/local/lib -L/usr/local/lib
LDLIBS = -lcrypto -lssl -lz -lboost_system -lboost_date_time -lboost_filesystem -lboost_program_options -lpthread

ifeq ($(USE_STATIC),yes)
# NOTE: on glibc you will get this warning:
#   Using 'getaddrinfo' in statically linked applications requires at runtime
#   the shared libraries from the glibc version used for linking
	LIBDIR := /usr/lib
	LDLIBS += $(LIBDIR)/libboost_system.a
	LDLIBS += $(LIBDIR)/libboost_date_time.a
	LDLIBS += $(LIBDIR)/libboost_filesystem.a
	LDLIBS += $(LIBDIR)/libboost_program_options.a
	LDLIBS += $(LIBDIR)/libssl.a
	LDLIBS += $(LIBDIR)/libcrypto.a
	LDLIBS += $(LIBDIR)/libz.a
	LDLIBS += -lpthread -static-libstdc++ -static-libgcc -lrt -ldl
	USE_AESNI := no
else
	LDLIBS += -lcrypto -lssl -lz -lboost_system -lboost_date_time -lboost_filesystem -lboost_program_options -lpthread
endif

# UPNP Support (miniupnpc 1.5 and higher)
ifeq ($(USE_UPNP),yes)
	CXXFLAGS += -DUSE_UPNP
ifeq ($(USE_STATIC),yes)
	LDLIBS += $(LIBDIR)/libminiupnpc.a
else
	LDLIBS += -lminiupnpc
endif
endif

ifeq ($(USE_AESNI),yes)
  machine := $(shell uname -m)
	ifeq ($(machine), aarch64)
		CXXFLAGS += -DARM64AES
	else
		CPU_FLAGS += -maes
	endif
endif

ifeq ($(USE_AVX),yes)
#check if AVX supported by CPU
ifneq ($(shell $(GREP) -c avx /proc/cpuinfo),0)
	CPU_FLAGS += -mavx
endif
endif

